apply plugin: 'com.android.library'

android {
    compileSdkVersion v_compilesdkversion as int
    defaultConfig {
        minSdkVersion v_minsdkversion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    signingConfigs {
        releasesign
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releasesign
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set libs as .so's location instead of jni
        //jni.srcDirs = [] //disable automatic ndk-build call with auto-generated Android.mk file
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${v_supportversion}"
    implementation "com.android.support:recyclerview-v7:${v_supportversion}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':lame')
}
File signFile = file(System.getenv('HOME') + "/.android/sign.properties")
if (signFile.canRead()) {
    Properties p = new Properties()
    p.load(new FileInputStream(signFile))

    if (p != null
            && p.containsKey('key.store')
            && p.containsKey('key.store.password')
            && p.containsKey('key.alias')
            && p.containsKey('key.alias.password')
    ) {
        println "RELEASE_BUILD: Signing..."
        android.signingConfigs.releasesign.storeFile = file(p['key.store'])
        android.signingConfigs.releasesign.storePassword = p['key.store.password']
        android.signingConfigs.releasesign.keyAlias = p['key.alias']
        android.signingConfigs.releasesign.keyPassword = p['key.alias.password']
    } else {
        println "RELEASE_BUILD: Required properties in signing.properties are missing"
        android.buildTypes.release.signingConfig = null
    }
} else {
    println "RELEASE_BUILD: signing.properties not found"
    android.signingConfigs.releasesign.storeFile = file("${rootDir}/demoRelease.keystore")
    android.signingConfigs.releasesign.storePassword = "123456"
    android.signingConfigs.releasesign.keyAlias = "svkit"
    android.signingConfigs.releasesign.keyPassword = "123456"
}